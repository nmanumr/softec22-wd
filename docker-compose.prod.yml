version: '3.5'

networks:
  backend:

volumes:
  postgres:

services:
  db:
    image: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      - POSTGRES_DB=clinicx
      - POSTGRES_USER=clinicx
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: unless-stopped

  cache:
    image: redis
    networks:
      - backend
    restart: unless-stopped

  primary:
    build:
      context: .
      dockerfile: Dockerfile
    image: clinicx
    env_file: .env
    environment:
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - POSTGRES_HOSTNAME=db
    networks:
      - backend
    depends_on:
      - db
      - cache
    command: >
      bash -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    ports:
      - "5000:8000"
    restart: unless-stopped

  worker:
    image: clinicx_worker
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - POSTGRES_HOSTNAME=db
    depends_on:
      - primary
    networks:
      - backend
    command: celery --app=clinicx:celery_app worker -n %h
    restart: unless-stopped

  webapp:
    image: clinicx-ui
    build:
      context: ./ui
      dockerfile: Dockerfile
    depends_on:
      - primary
    volumes:
      - ./ui:/app
    ports:
      - "5001:3000"
    restart: unless-stopped
